apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rental-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"  # Force HTTPS
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"


spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - lendora.ng
        - api.lendora.ng
        - mailhog.lendora.ng
        - rabbitmq.lendora.ng
        - redis-ui.lendora.ng
      secretName: lendora-tls # Certificate stored here
  rules:
    - host: lendora.ng
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: lendora-frontend
                port:
                  number: 4000
    - host: api.lendora.ng
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: broker-service
                port:
                  number: 8080
    - host: mailhog.lendora.ng
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: mailhog
                port:
                  number: 8025
    - host: rabbitmq.lendora.ng
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: rabbitmq
                port:
                  number: 15672
    - host: redis-ui.lendora.ng
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: redis-ui
                port:
                  number: 8081
